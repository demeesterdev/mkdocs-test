name: Publish Wiki to Azure Static Web App

on: 
  gollum

jobs:
  build_and_deploy_job:
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - name: checkout wiki
        uses: actions/checkout@v3
        with:
          repository: ${{github.repository}}.wiki
          path: 'docs'
      - name: install mkdocs and plugins
        run:  |
          pip install mkdocs mkdocs-exclude
      - name: parse file tags
        run: |
          excludeFromPublish=''
          for file in $(find ./docs/ -name "*.md")
          do
            wikiFilePath=$(realpath --relative-to ./docs "$file")

            # check if file has config tag
            if [ "$(sed -n -e '1{/<\!-- hasConfig -->/p}' "$file")" ]; then
              echo "::notice:: found tag <\!-- hasConfig --> on wiki file $wikiFilePath"
              configfile=$file
            fi

            #check if file has do not publish tag
            if [ "$(sed -n -e '1{/<\!-- doNotPublish -->/p}' "$file")" ]; then
              echo "::notice:: found tag <\!-- doNotPublish --> on wiki file $wikiFilePath" 
              excludeFromPublish="$excludeFromPublish:$wikiFilePath"
            fi
          done  

          echo "EXCLUDE_GLOBS=${excludeFromPublish:1}" >> $GITHUB_ENV
          echo "CONFIG_SOURCE_FILE=$configfile" >> $GITHUB_ENV
      - name: build mkdocs config
        env:
          BASE_CONFIG_FILE: base.yml
          CONFIG_FILE: mkdocs.yml
          REPO_URL: https://github.com/${{github.repository}}/wiki
        run: |
          # read config from config source file in wiki
          sed -n '/^```mkdocs.yml/,/^```/p' "$CONFIG_SOURCE_FILE" |
          sed '/^```/d' > "$BASE_CONFIG_FILE"

          # build extended mkdocs config for publishing
          echo ''                             >  "$CONFIG_FILE"

          #inherit from parsed config
          echo "INHERIT: ./$BASE_CONFIG_FILE" >> "$CONFIG_FILE"
          echo "repo_url: $REPO_URL"          >> "$CONFIG_FILE"
          echo "edit_uri: ''"                 >> "$CONFIG_FILE"

          # add files to exclude from deployment
          echo "plugins:"                     >> "$CONFIG_FILE"
          echo "  - exclude:"                 >> "$CONFIG_FILE"
          echo "      glob: "                 >> "$CONFIG_FILE"

          IFS=':' read -ra GLOBS <<< "$EXCLUDE_GLOBS"
          for glob in "${GLOBS[@]}"; do 
            echo "        - \"$glob\""  >> "$CONFIG_FILE"
          done
      - name: add page title to content
        run: |
          for file in $(find ./docs/ -name '*.md')
          do
            filename=$(basename -- "$file")
            title=$(echo "${filename%.*}" | tr '-' ' ')
            echo "filename $filename -> $title"   

            echo -e "Title: $title\n\n$(cat $file)" > "$file"
          done
      - name: rename homepage to index.md
        run:  |
          homepage=$(sed -n '/^```homepage/,/^```/p' "$CONFIG_SOURCE_FILE" | sed '/^```/d')
          if [[ ! -f ./docs/index.md ]]; then 
            find ./docs/ -maxdepth 1 -iname "$homepage" -exec mv {} ./docs/index.md \;
          fi
      - name: replace links to homepage with index.md
        run: |
          homepage=$(sed -n '/^```homepage/,/^```/p' "$CONFIG_SOURCE_FILE" | sed '/^```/d')
          regex="${homepage//\//\\\/}"
          regex="${regex//\./\\\.}"
          
          for file in $(find ./docs/ -name '*.md')
          do
             # replace '[linkname](homepagefile)' with '[linkname](index.md)'
             sed -i "s/]($regex)/](index.md)/g" $file
          done
      - name: build site
        run: mkdocs build
      - name: write statice web app config
        run: |
          echo "TODO: implement writing of config for static web app"
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for GitHub integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations ######
          app_location: "site" # App source code path relative to repository root
          skip_app_build: true
          skip_api_build: true
          ###### End of Repository/Build Configurations ######